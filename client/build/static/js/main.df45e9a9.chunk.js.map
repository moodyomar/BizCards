{"version":3,"sources":["services/apiSer.js","services/userSer.js","comps/navbar.js","comps/common/pageHeader.js","comps/cardsList.js","common_comps/pagenation.js","comps/home.js","comps/about.js","comps/page404.js","comps/signup.js","comps/login.js","comps/footer.js","comps/userInfo.js","services/authSer.js","comps/common/protectedRoute.js","comps/favoriteCards.js","comps/biz/myCards.js","comps/biz/addCard.js","comps/biz/editCard.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","doApiGet","_url","a","axios","get","resp","console","log","data","doApiMethod","_method","_bodyData","method","url","headers","localStorage","user","updateUserData","_id","removeItem","getUserData","updateUserAddFavCards","_bizCardNumber","temp_ar","cards","Set","splice","length","n","toast","success","error","removeUserFavCard","filter","item","warning","NavBar","props","useState","showMobileNav","setShowMobileNav","setUser","history","useHistory","useEffect","location","logOut","push","info","className","onClick","aria-hidden","style","display","to","Fragment","biz","PageHeader","title","CardsList","userData","setUserData","update","setForceUpdate","showBtnFav","includes","bizNumber","ar","map","bg","bizImage","backgroundImage","bizName","bizDescription","bizPhone","bizAddress","Pagenation","countPage","setCountPage","doApi","urlOfItemNum","count","Math","ceil","Array","i","linkTo","Home","cards_ar","setCards_ar","quries","URLSearchParams","window","search","page","About","Page404","SignUpClient","useForm","register","handleSubmit","errors","formState","onSubForm","formData","response","code","emailRef","required","pattern","passwordRef","minLength","nameRef","checkRef","onSubmit","type","email","password","fullName","Login","setItem","token","Footer","Date","getFullYear","UserInfo","userInfo","setUserInfo","dateCreated","createdAt","substr","indexOf","name","checkIfUser","err","ProtectedRoute","checkTokenUser","bizRoute","status","exact","path","render","comp","FavoriteCards","setCardsAr","MyCards","setAr","delCard","confirm","background","AddCard","descRef","addressRef","phoneRef","imageRef","dataForm","class","rows","EditCard","setCard","setValue","computedMatch","params","id","dark","App","ifUserLogin","component","minHeight","position","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df45e9a9.chunk.js","sourcesContent":["import axios from \"axios\"\r\n\r\n// שנעלה לשרת יתחליף לכתובת של השרת\r\nexport const API_URL = \"https://macard.herokuapp.com\";\r\n// export const API_URL = \"https://ynet.co.il\";\r\nexport const PER_PAGE = 5;\r\n\r\nexport const doApiGet = async (_url) => {\r\n  try {\r\n    let resp = await axios.get(_url);\r\n    console.log(resp)\r\n    return resp.data;\r\n  } catch (err) {\r\n    console.log(err)\r\n    throw err;\r\n  }\r\n}\r\n\r\nexport const doApiMethod = async (_url, _method, _bodyData) => {\r\n  try {\r\n    let resp = await axios({\r\n      method: _method,\r\n      url: _url,\r\n      data: _bodyData,\r\n      headers: {\r\n        'content-type': \"application/json\",\r\n        \"x-auth-token\": localStorage[\"tok\"]\r\n      }\r\n    })\r\n    return resp.data;\r\n  }\r\n  catch (err) {\r\n    console.log(err );\r\n// if there is an err also the promise that listening will throw it\r\n    throw err;\r\n  }\r\n}\r\n","import { toast } from \"react-toastify\";\nimport { API_URL, doApiMethod } from \"./apiSer\";\n\nlet user = {};\n\nexport const getUserDataFromApi = async () => {\n  try {\n    let url = API_URL + \"/users/userInfo\"\n    let data = await doApiMethod(url, \"GET\")\n    console.log(data);\n    user = data;\n  }\n  catch (err) {\n    console.log(err);\n\n  }\n}\n\nexport const updateUserData = async () => {\n  if (localStorage[\"tok\"]) {\n    // if there is token we pull the user data,\n    // if not / token invalid we send him to login pg\n    let url = API_URL + \"/users/userInfo\";\n    try {\n      let data = await doApiMethod(url, \"GET\");\n      // data = resp.data which returned from doApiMethod func\n      if (data._id) {\n        // if there is an id which mean data recived\n        // we assinged it to user object\n        user = data\n      }\n      else {\n        // otherwise we remove the token and return emptey user\n        localStorage.removeItem(\"tok\");\n        user = {}\n      }\n      return user\n    }\n    catch (err) {\n      localStorage.removeItem(\"tok\");\n      user = {};\n      return user\n    }\n  }\n  else {\n    user = {}\n    return user;\n  }\n}\n\n\nexport const getUserData = () => {\n  return user;\n}\n\n\n// function the will update the cards array of user when the user make a card favorite\nexport const updateUserAddFavCards = async (_bizCardNumber) => {\n  //  making sure that there is no duplicates in array\n\n  let temp_ar = [...user.cards, _bizCardNumber];\n  // Set -> making an object the maing sure there is no duplicates\n  temp_ar = new Set([...temp_ar]);\n  user.cards.splice(0, user.cards.length, ...temp_ar);\n\n  let url = API_URL + \"/users/cards\"\n  try {\n\n    let data = await doApiMethod(url, \"PATCH\", { cards: user.cards });\n    // if there is a success ill recive n=1 just like in postman\n    if (data.n == 1) {\n      toast.success(\"Card is added to favorite\")\n    }\n    return data;\n  }\n  catch (err) {\n    console.log(err)\n    toast.error(\"an error accured , try again later !\")\n    throw err\n  }\n}\n\n// removing a card from favorite\nexport const removeUserFavCard = async (_bizCardNumber) => {\n  // return to temp_ar all the cards beside the one i want to remove\n  let temp_ar = user.cards.filter(item => item != _bizCardNumber)\n  user.cards.splice(0, user.cards.length, ...temp_ar);\n\n  let url = API_URL + \"/users/cards\"\n  try {\n\n    let data = await doApiMethod(url, \"PATCH\", { cards: user.cards });\n    // if there is a success ill recive n=1 just like in postman\n    if (data.n == 1) {\n      toast.warning(\"Card removed from favorite\")\n    }\n    return data;\n  }\n  catch (err) {\n    console.log(err)\n    toast.error(\"There problem , try again later !\")\n    throw err\n  }\n}","import React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { getUserData, updateUserData } from '../services/userSer';\r\nfunction NavBar(props) {\r\n  let [showMobileNav, setShowMobileNav] = useState(false);\r\n  let [user, setUser] = useState(null)\r\n  let history = useHistory()\r\n\r\n  useEffect(() => {\r\n    setUser(getUserData)\r\n  }, [props.location])\r\n\r\n  // מעלים את התפריט נאב במצב מובייל לאחר שלחצנו על לינק\r\n  const hideNavMobile = () => {\r\n    setShowMobileNav(false);\r\n  }\r\n\r\n  const logOut = async () => {\r\n    // alert(\"log out\");\r\n    localStorage.removeItem(\"tok\");\r\n    await updateUserData();\r\n    history.push(\"/login\");\r\n    toast.info(\"You logged out from system !\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container nav_top p-2\">\r\n      <div className=\"row align-items-center\">\r\n        <div className=\"logo col-lg-3 d-flex justify-content-between align-items-center\">\r\n          <h2 className=\"text-danger\">Cards project</h2>\r\n          <div className=\"burger\" onClick={() => {\r\n            setShowMobileNav(!showMobileNav);\r\n          }}>\r\n\r\n            <i className=\"fa fa-bars fs-2\" aria-hidden=\"true\"></i>\r\n          </div>\r\n        </div>\r\n        {/* style -> with condition */}\r\n        <nav onClick={hideNavMobile} className={\"col-lg-9 text-end\"} style={{ display: showMobileNav && \"block\" }} >\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to=\"/about\">About</Link>\r\n          {!localStorage[\"tok\"] ?\r\n            <React.Fragment>\r\n              <Link to=\"/login\">Log in</Link>\r\n              <Link to=\"/signup\">Sign up</Link>\r\n            </React.Fragment>\r\n            :\r\n            <React.Fragment>\r\n              <Link to=\"/userInfo\">User Info</Link>\r\n              <Link to=\"/favorites\">My Favorites</Link>\r\n              {/* ? - אם עדיין לפני הנקודה האובייקט או המאפיין\r\n        לא קיימים או נאל לא יחזיר שגיאה */}\r\n              {user?.biz && <Link to=\"/myBizCards\">My Cards</Link>}\r\n              <Link onClick={logOut} to=\"#\" className=\"text-danger\">Log out</Link>\r\n            </React.Fragment>\r\n          }\r\n\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NavBar","import React from 'react';\r\n\r\nfunction PageHeader(props){\r\n  return(\r\n    <div className=\"my-4\">\r\n      <h1>\r\n      {props.title}</h1>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default PageHeader","import React, { useEffect, useState } from 'react';\nimport { getUserData, removeUserFavCard, updateUserAddFavCards } from '../services/userSer';\n\nfunction CardsList(props) {\n\n  let [userData, setUserData] = useState({})\n  let [update, setForceUpdate] = useState(1)\n\n  useEffect(() => {\n    setUserData(getUserData)\n  }, [])\n\n  const showBtnFav = (item) => {    \n    // if by chance the bizz number is in card property of the user\n    //  show emptry hart(button) for adding to favorite\n    if (!userData.cards.includes(item.bizNumber)) {\n      return (\n        <button onClick={async () => {\n          // update cards array in the user (fav cards)\n          await updateUserAddFavCards(item.bizNumber);\n          // updating comp state that will force it rerender again\n          // and like that it will change the button status in display\n          // forceupdate -> func that I made to force an update\n          setForceUpdate(update + 1);\n\n        }} className=\"btn\"><i className=\"fa fa-heart-o fs-2 text-black\" aria-hidden=\"true\"></i></button>\n      )\n    }\n    else {\n      return (<button onClick={async () => {\n        await removeUserFavCard(item.bizNumber)\n        setForceUpdate(update + 1);\n      }} className=\"btn\"><i className=\"fa fa-heart fs-2 text-danger\" aria-hidden=\"true\"></i></button>)\n    }\n  }\n\n  return (\n    <div className=\"row\">\n      {props.ar.map((item) => {\n        let bg = item.bizImage?.length > 2 ? item.bizImage : '/images/defaultImg.jpg'\n        return (\n          <div key={item.bizNumber} className=\"col-lg-4 p-3\">\n            <div className=\"p-2 border\">\n              <div className=\"bizImg\" style={{ backgroundImage: `url(${bg})` }}></div>\n              <article className=\"p-3\">\n                <h2>{item.bizName}</h2>\n                <p>{item.bizDescription}</p>\n                <hr />\n                <div><strong>Phone:</strong> {item.bizPhone}</div>\n                <div><strong>Address:</strong> {item.bizAddress}</div>\n                <div><strong>Biz Number:</strong> {item.bizNumber}</div>\n                {userData._id ? showBtnFav(item) :\n                  <small className=\"text text-danger\">* log in to add to favorite</small>}\n              </article>\n            </div>\n          </div>\n        )\n      })}\n    </div>\n\n  )\n}\n\nexport default CardsList","import React, { useEffect, useState } from 'react';\nimport { API_URL, doApiGet, PER_PAGE } from '../services/apiSer';\nimport {Link} from 'react-router-dom';\n\n\nfunction Pagenation(props){\n\n  let [countPage,setCountPage] = useState(0)\n\n  useEffect(() => {\ndoApi()\n  },[])\n\nconst doApi = async() => { \n  let url = API_URL + props.urlOfItemNum\n  let data = await doApiGet(url);\n  console.log(data.count);\n  setCountPage(Math.ceil(data.count / PER_PAGE))\n  \n}\n\n  return(\n    <div>\n    <span>Page: </span>\n    {/* maap loop without a real array. Making ar with Array object */}\n     {[...Array(countPage)].map((item,i) => {\n       return(\n       <Link key={i} to={props.linkTo+(i+1)} className=\"btn btn-dark me-1\" >{i + 1}</Link>\n       )\n     }) }\n  </div>\n  )\n}\n\nexport default Pagenation\n\n","import React, { useEffect, useState } from 'react';\r\nimport PageHeader from './common/pageHeader';\r\nimport CardsList  from './cardsList';\r\nimport { API_URL, doApiGet } from '../services/apiSer';\r\nimport Pagenation from '../common_comps/pagenation';\r\n\r\n\r\nfunction Home(props){\r\n\r\nlet [cards_ar,setCards_ar] = useState([])\r\n\r\n\r\nuseEffect(() => {\r\n// query string option for the number of the page we are at\r\nconst quries = new URLSearchParams(window.location.search);\r\nlet page = quries.get(\"page\") ? quries.get(\"page\")-1 : 0;\r\nlet url = API_URL+\"/cards?reverse=yes&page=\"+page;\r\ndoApi(url);\r\n},[props.location])\r\n\r\nconst doApi = async(url) => { \r\n  let data = await doApiGet(url);\r\n  console.log(data);\r\n  setCards_ar(data);\r\n  \r\n}\r\n\r\n  return(\r\n    <div>\r\n      <PageHeader title=\"Welcome to home page\" />\r\n   {/*  urlOfItemNum-> url that will return the amout of quiries\r\n      linkTo -> url in client side that will send him each button\r\n      */}\r\n      <Pagenation urlOfItemNum=\"/cards/totalCards\" linkTo=\"/?page=\"   />\r\n      <CardsList ar={cards_ar} />\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport PageHeader from './common/pageHeader';\r\n\r\nfunction About(props){\r\n  return(\r\n    <div>\r\n      <PageHeader title=\"About\"/>\r\n      <p>\r\n        Lorem ipsum dolor, sit amet consectetur adipisicing elit. Neque eveniet natus ullam repellat. Reprehenderit nulla enim ab quia similique sit recusandae iure quasi iusto officiis, praesentium dolorem consequuntur odit mollitia quo eligendi vero aspernatur, accusantium optio vitae minima, neque iste! Porro illo doloribus quo officiis molestiae ut quas at voluptatem praesentium voluptatum optio sapiente quos ipsam repudiandae omnis laboriosam, magnam est accusantium fuga, harum consequatur maxime! Quos magnam, voluptatum iure est suscipit vel, laborum, impedit doloribus sunt nesciunt autem accusamus minus dicta doloremque veritatis. Nihil aut doloribus quis eligendi, fugit itaque aperiam earum numquam sit maiores a! In, dignissimos hic!\r\n      </p>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default About","import React from 'react';\r\nimport PageHeader from './common/pageHeader';\r\n\r\nfunction Page404(props){\r\n  return(\r\n    <div>\r\n      <PageHeader title=\"Page not found , 404!\" />\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default Page404","import React from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport { API_URL, doApiMethod } from '../services/apiSer';\r\nimport PageHeader from './common/pageHeader';\r\n \r\nfunction SignUpClient(props){\r\n  let {register , handleSubmit ,  formState: { errors } } = useForm();\r\n  let history = useHistory();\r\n\r\n  const onSubForm = async(formData) => {\r\n    let url = API_URL+\"/users/\";\r\n    try{\r\n      let data = await doApiMethod(url,\"POST\",formData);\r\n      if(data._id){\r\n        toast.success(\"You sign up successfuly!\")\r\n        history.push(\"/login\");\r\n      }\r\n      else{\r\n        toast.error(\"an error occurred , please come back later or try again\")\r\n      }\r\n    }\r\n    catch(err){\r\n      // in axios the err come with response prop and data prop\r\n      console.log(err.response.data);\r\n      if(err.response.data.code){\r\n        toast.error(\"User is already in the systme , try login\");\r\n      }\r\n      else {\r\n        toast.error(\"an error occurred , please come back later or try again\");\r\n      }\r\n    }\r\n  }\r\n\r\n  // register -> ref= useRef()\r\n  let emailRef = register(\"email\",{\r\n    required:true,  \r\n    pattern:/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\r\n  })\r\n\r\n  let passwordRef =  register(\"password\",{required:true, minLength:3}) ;\r\n  let nameRef = register(\"name\",{required:true, minLength:2})\r\n  let checkRef = register(\"biz\",{required:false})\r\n\r\n  return(\r\n    <div className=\"container\">\r\n    \r\n    <form onSubmit={handleSubmit(onSubForm)} className=\"col-lg-6 mx-auto shadow p-3 rounded mt-3\">\r\n      <PageHeader title=\"Sign up new user\"/>\r\n      <div>\r\n        <label>Email:</label>\r\n        <input {...emailRef} type=\"text\" className=\"form-control\" />\r\n        {errors.email && <span className=\"text-danger\">Enter valid email</span>}\r\n      </div>\r\n      <div>\r\n        <label>Password:</label>\r\n        <input {...passwordRef} type=\"text\" className=\"form-control\" />\r\n        {errors.password && <span className=\"text-danger\">Enter min 3 charts password</span>}\r\n      </div>\r\n      <div>\r\n        <label>Full name:</label>\r\n        <input {...nameRef} type=\"text\" className=\"form-control\" />\r\n        {errors.fullName && <span className=\"text-danger\">Enter min 2 charts name</span>}\r\n      </div>\r\n      <div className=\"mt-2\">\r\n        <input {...checkRef}  type=\"checkbox\" className=\"form-check-input me-2\" />\r\n        <label>I am Business</label>\r\n      </div>\r\n      <button className=\"btn btn-info mt-3\">Sign up</button>\r\n    </form>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default SignUpClient","import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport { API_URL, doApiMethod } from '../services/apiSer';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport PageHeader from './common/pageHeader';\r\nimport { updateUserData } from '../services/userSer';\r\n\r\n\r\nfunction Login(props) {\r\n  let { register, handleSubmit, formState: { errors } } = useForm();\r\n  let history = useHistory();\r\n\r\n  const onSubForm = async (formData) => {\r\n    console.log(formData);\r\n    //TODO: send formData to nodejs project /users/login in post\r\n    try {\r\n\r\n      let url = API_URL + \"/users/login\";\r\n      let data = await doApiMethod(url, \"POST\", formData);\r\n      console.log(data);\r\n      // token recived , then saving it to local storage\r\n      localStorage.setItem(\"tok\", data.token);\r\n      // update the user details so we can pull them anywhere\r\n      // from the user service\r\n      await updateUserData()\r\n      toast.success(\"You logged in !\");\r\n      history.push(\"/userInfo\");\r\n    }\r\n    catch (err) {\r\n      console.log(err);\r\n      toast.error(\"User or password worng!\");\r\n    }\r\n\r\n  }\r\n\r\n  // register -> ref= useRef()\r\n  let emailRef = register(\"email\", {\r\n    required: true,\r\n    pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\r\n  })\r\n\r\n  let passwordRef = register(\"password\", { required: true, minLength: 3 });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n\r\n      <form onSubmit={handleSubmit(onSubForm)} className=\"col-lg-6 mx-auto shadow p-3 rounded mt-3\">\r\n        <PageHeader title=\"Log in\" />\r\n        <div>\r\n          <label>Email:</label>\r\n          <input {...emailRef} type=\"text\" className=\"form-control\" />\r\n          {errors.email && <span className=\"text-danger\">Enter valid email</span>}\r\n        </div>\r\n        <div>\r\n          <label>Password:</label>\r\n          <input {...passwordRef} type=\"text\" className=\"form-control\" />\r\n          {errors.password && <span className=\"text-danger\">Enter min 3 charts password</span>}\r\n        </div>\r\n\r\n        <button className=\"btn btn-success mt-3\">Log in</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login","import React from 'react';\r\n\r\nfunction Footer(props){\r\n  return(\r\n    <p className=\"border-top pt-3 text-center\">\r\n      Cards App © {new Date().getFullYear()} - 1991\r\n    </p>\r\n  )\r\n}\r\n\r\nexport default Footer","import React, { useEffect, useState } from 'react';\r\nimport { API_URL, doApiMethod } from '../services/apiSer';\r\nimport PageHeader from './common/pageHeader';\r\n\r\nfunction UserInfo(props){\r\n  let [userInfo, setUserInfo] = useState({});\r\n\r\n  useEffect(() => {\r\n    doApi();\r\n  },[])\r\n\r\n  const doApi = async() => {\r\n    let url = API_URL + \"/users/userInfo\"\r\n    // GET -> בבקשות גט לא מעבירים לפונקציה את הבאדי\r\n    let data = await doApiMethod(url,\"GET\");\r\n    console.log(data);\r\n    data.dateCreated = data.createdAt.substr(0,data.createdAt.indexOf(\"T\"));\r\n    // data.dateCreated = new Date(userInfo.createdAt).toDateString();\r\n    setUserInfo(data);\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <PageHeader title=\"Info about your user:\"/>\r\n      <div>\r\n        <h4 className=\"h5\">Name: {userInfo.name}</h4>\r\n        <h4 className=\"h5\">Email: {userInfo.email}</h4>\r\n        <h4 className=\"h5\">Sign up data: {userInfo.dateCreated}</h4>\r\n      </div>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default UserInfo","import { API_URL, doApiMethod } from \"./apiSer\"\r\n\r\n// check if regular user and have token\r\nexport const checkIfUser = async() => {\r\n  // check if there localstorage\r\n  if(!localStorage[\"tok\"]){\r\n    return {err:\"No token in localstorage\"};\r\n  }\r\n  try{\r\n    // check if token valid in nodejs\r\n    let url = API_URL+\"/users/authUser\";\r\n    let data = await doApiMethod(url,\"GET\");\r\n    return data;\r\n  }\r\n  catch(err){\r\n    console.log(err);\r\n    return err;\r\n  }\r\n}","import React from 'react';\r\nimport { Route, useHistory } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport { checkIfUser } from '../../services/authSer';\r\nimport { getUserData } from '../../services/userSer';\r\n\r\nfunction ProtectedRoute(props) {\r\n  let history = useHistory();\r\n\r\n  const checkTokenUser = async () => {\r\n    let data = await checkIfUser()\r\n    console.log(data);\r\n\r\n// בדיקה אם במקרה קיבלנו את הפרופס ביז \r\n    // שאומר שהראוט הנל לא מספיק להיות רק רשום\r\n    // אלא המשתמש חייב להיות עסק\r\n    if(props.bizRoute){\r\n      // כדי לבדוק אם המשתמש הוא ביז\r\n      // חייב לשלוף את המידע קודם מהסרבס\r\n      let user = getUserData();\r\n      if(!user.biz){\r\n        toast.warning(\"You must be business\");\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n\r\n    // if all good , status w'll be recived\r\n    if (!data.status) {\r\n      // toast.error(\"zzzz\"); // this msg is shows when login out aswell\r\n      // delete token if invalid\r\n      localStorage.removeItem(\"tok\");\r\n      history.push(\"/login\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Route exact path={props.path}\r\n      render={() => {\r\n        // check if user loggen in , other wise send to login pg\r\n        checkTokenUser();\r\n        return (<props.comp {...props} />);\r\n      }} />\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute;","import React, { useEffect, useState } from 'react';\nimport { API_URL, doApiMethod } from '../services/apiSer';\nimport PageHeader from './common/pageHeader';\nimport CardsList  from './cardsList';\n\nfunction FavoriteCards(props){\n  let [cards_ar,setCardsAr] = useState([]);\n\n  useEffect(() => {\n    let url = API_URL + \"/users/userCardsFav\";\n    doApi(url)\n  },[])\n\n  const doApi = async(_url) => {\n    try{\n    let data = await doApiMethod(_url,\"GET\");\n    console.log(data);\n    setCardsAr(data);\n    }\n    catch(err){\n      console.log(err.response)\n    }\n  }\n\n  //TODO: add redux to update\n\n  return(\n    <div>\n      <PageHeader title=\"Your favorite business cards\" />\n      <CardsList ar={cards_ar}/>\n    </div> \n  )\n}\n\nexport default FavoriteCards","import React, { useEffect, useState } from 'react';\nimport PageHeader from '../common/pageHeader';\nimport { Link } from 'react-router-dom';\nimport { API_URL, doApiMethod } from '../../services/apiSer';\nimport { toast } from 'react-toastify';\n\nfunction MyCards(props) {\n\n  let [ar, setAr] = useState([])\n  useEffect(() => {\n    doApi()\n  }, [props.location])\n\n  const doApi = async () => {\n    let url = API_URL + \"/cards/userCardsAdded?perPage=999\"\n    let data = await doApiMethod(url, \"GET\")\n    setAr(data)\n\n  }\n\n  const delCard = async(_id) => {\n    if(window.confirm(\"Are you sure you want to del?\")){\n      let url = API_URL+ \"/cards/\"+_id;\n      let data = await doApiMethod(url,\"DELETE\");\n      if(data.n == 1){\n        doApi();\n        toast.info(\"Card deleted\");\n      }\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <PageHeader title=\"Cards you've added\" />\n      <Link to=\"addCard\" className=\"btn btn-success\">Add new Biz Card</Link>\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Name</th>\n            <th>Description</th>\n            <th>Address</th>\n            <th>Phone</th>\n            <th>edit/del</th>\n          </tr>\n        </thead>\n        <tbody>\n          {ar.map((item,i) => {\n            return (\n              <tr key={i}>\n                <td>{i + 1}</td>\n                <td>{item.bizName}</td>\n                <td>{item.bizDescription.substr(0, 40)}...</td>\n                <td>{item.bizAddress}</td>\n                <td>{item.bizPhone}</td>\n                <td>\n                <Link to={\"/editCard/\"+item._id}>\n                    <button>edit</button>\n                    </Link>\n                  <button className=\"ms-2\" style={{ background: \"pink\" }} onClick={() => {\n                      delCard(item._id);\n                    }}>del</button>\n                </td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default MyCards","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from \"react-router-dom\"\nimport { toast } from \"react-toastify\";\nimport { API_URL, doApiMethod } from '../../services/apiSer';\n\nfunction AddCard(props) {\n\n  let { register, handleSubmit, formState: { errors } } = useForm();\n  let history = useHistory();\n\n  let nameRef = register(\"bizName\", { required: true, minLength: 2 });\n  let descRef = register(\"bizDescription\", { required: true, minLength: 2 });\n  let addressRef = register(\"bizAddress\", { required: true, minLength: 2 });\n  let phoneRef = register(\"bizPhone\", { required: true, minLength: 2 });\n  let imageRef = register(\"bizImage\", { required: false });\n\n  const onSubForm = async (dataForm) => {\n    console.log(dataForm);\n\n    try {\n      let url = API_URL + \"/cards\";\n      let data = await doApiMethod(url, \"POST\", dataForm);\n      console.log(data)\n      if (data._id){\n        toast.success(\"Card been added\");\n        history.push(\"/myBizCards\");\n      }\n    }\n    catch (err) {\n      console.log(err);\n      toast.error(\"There problem, come back next year!\");\n    }\n  }\n\n  return (\n    <div>\n      <h1>Add new card to your biz:</h1>\n      <form onSubmit={handleSubmit(onSubForm)} className=\"row\">\n        <div className=\"col-lg-6\">\n          <label>*Biz name</label>\n          <input {...nameRef} type=\"text\" className=\"form-control mt-2\" />\n          {errors.bizName &&\n            <small className=\"text-danger\">* You must fill your name</small>\n          }\n        </div>\n\n        <div className=\"col-lg-6\">\n          <label>*Biz address</label>\n          <input  {...addressRef} type=\"text\" className=\"form-control mt-2\" />\n          {errors.bizAddress &&\n            <small className=\"text-danger\">* You must Enter valid address</small>\n          }\n        </div>\n        <div className=\"col-lg-6\">\n          <label>*Biz phone</label>\n          <input  {...phoneRef} type=\"text\" className=\"form-control mt-2\" />\n          {errors.bizPhone &&\n            <small className=\"text-danger\">* You must Enter valid Phone number</small>\n          }\n        </div>\n        <div className=\"col-lg-6\">\n          <label>*Biz image url</label>\n          <input  {...imageRef} type=\"text\" className=\"form-control mt-2\" />\n          {errors.bizImage &&\n            <small className=\"text-danger\">* You must Enter valid url</small>\n          }\n        </div>\n        <div className=\"col-lg-12\">\n          <label>*Biz info</label>\n          <textarea {...descRef} class=\"form-control\" rows=\"4\"></textarea>\n          {errors.bizDescription &&\n            <small className=\"text-danger\">* You must enter descrption of biz</small>\n          }\n        </div>\n        <div className=\"col-12 text-center mb-3\">\n          <button className=\"btn btn-info  mt-4\">Add new biz card</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default AddCard","import React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { toast } from \"react-toastify\";\r\nimport { API_URL, doApiGet, doApiMethod } from '../../services/apiSer';\r\n\r\n\r\nfunction EditCard(props) {\r\n  let [card,setCard] = useState({})\r\n\r\n  let { register, handleSubmit, setValue, formState: { errors } } = useForm();\r\n  let history = useHistory();\r\n\r\n  let nameRef = register(\"bizName\", { required: true, minLength: 2 });\r\n  let descRef = register(\"bizDescription\", { required: true, minLength: 2 });\r\n  let addressRef = register(\"bizAddress\", { required: true, minLength: 2 });\r\n  let phoneRef = register(\"bizPhone\", { required: true, minLength: 2 });\r\n  let imageRef = register(\"bizImage\", { required: false });\r\n\r\n  useEffect(() => {\r\n    //computedMatch -> ככה אופסים פרמטר מפרוטקדט ראוט \r\n    // וכאשר הקומפנינטה מופיע עם רנדר פרופ ולא קומפניט\r\n    doApi();\r\n  },[])\r\n\r\n\r\n  const doApi = async() => {\r\n    // לאסוף את המידע שיהיה כבר באינפוטים\r\n    let url = API_URL+\"/cards/single/\"+props.computedMatch.params.id\r\n    let data = await doApiGet(url);\r\n    console.log(data);\r\n    setCard(data);\r\n   \r\n    // ככה מעדכנים את האינפוטים\r\n    setValue(\"bizName\",data.bizName);\r\n    setValue(\"bizDescription\",data.bizDescription);\r\n    setValue(\"bizAddress\",data.bizAddress);\r\n    setValue(\"bizPhone\",data.bizPhone);\r\n    setValue(\"bizImage\",data.bizImage);\r\n  \r\n  }\r\n\r\n  const onSubForm = async (dataForm) => {\r\n    console.log(dataForm);\r\n\r\n    try {\r\n      let url = API_URL + \"/cards/\" + props.computedMatch.params.id;\r\n      let data = await doApiMethod(url, \"PUT\", dataForm);\r\n      console.log(data)\r\n      if (data.n == 1){\r\n        toast.dark(\"Card's been updated\");\r\n        history.push(\"/myBizCards\");\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.log(err);\r\n      toast.error(\"an error occurred , please come back later or try again\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Edit card:</h1>\r\n      <form onSubmit={handleSubmit(onSubForm)} className=\"row\">\r\n        <div className=\"col-lg-6\">\r\n          <label>*Biz name</label>\r\n          <input {...nameRef} type=\"text\" className=\"form-control mt-2\" />\r\n          {errors.bizName &&\r\n            <small className=\"text-danger\">* You must fill your name</small>\r\n          }\r\n        </div>\r\n\r\n        <div className=\"col-lg-6\">\r\n          <label>*Biz address</label>\r\n          <input  {...addressRef} type=\"text\" className=\"form-control mt-2\" />\r\n          {errors.bizAddress &&\r\n            <small className=\"text-danger\">* You must Enter valid address</small>\r\n          }\r\n        </div>\r\n        <div className=\"col-lg-6\">\r\n          <label>*Biz phone</label>\r\n          <input   {...phoneRef} type=\"text\" className=\"form-control mt-2\" />\r\n          {errors.bizPhone &&\r\n            <small className=\"text-danger\">* You must Enter valid Phone number</small>\r\n          }\r\n        </div>\r\n        <div className=\"col-lg-6\">\r\n          <label>*Biz image url</label>\r\n          <input  {...imageRef} type=\"text\" className=\"form-control mt-2\" />\r\n          {errors.bizImage &&\r\n            <small className=\"text-danger\">* You must Enter valid url</small>\r\n          }\r\n        </div>\r\n        <div className=\"col-lg-12\">\r\n          <label>*Biz info</label>\r\n          <textarea {...descRef} className=\"form-control\" rows=\"4\"></textarea>\r\n          {errors.bizDescription &&\r\n            <small className=\"text-danger\">* You must enter descrption of biz</small>\r\n          }\r\n        </div>\r\n        <div className=\"col-12 text-center mb-3\">\r\n          <Link to=\"/myBizCards\" className=\"btn btn-dark mt-4 me-2\">Back to list</Link>\r\n          <button className=\"btn btn-warning  mt-4\">Update biz card</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditCard;","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport './App.css';\r\nimport './css/header_nav.css'\r\nimport './css/cards.css'\r\nimport NavBar from './comps/navbar';\r\nimport Home from './comps/home';\r\nimport About from './comps/about';\r\nimport Page404 from './comps/page404';\r\nimport SignUpClient from './comps/signup';\r\nimport Login from './comps/login';\r\nimport Footer from './comps/footer';\r\nimport UserInfo from './comps/userInfo';\r\nimport ProtectedRoute from './comps/common/protectedRoute';\r\nimport { updateUserData } from './services/userSer';\r\nimport FavoriteCards from './comps/favoriteCards';\r\nimport MyCards from './comps/biz/myCards';\r\nimport AddCard from './comps/biz/addCard';\r\nimport EditCard from './comps/biz/editCard';\r\n\r\nfunction App() {\r\n  let [user, setUser] = useState()\r\n\r\n  useEffect(() => {\r\n    ifUserLogin()\r\n    // shows the main tag down there only after we recive the user data + token\r\n  }, [])\r\n\r\n  const ifUserLogin = async () => {\r\n    // userdata will have the returned user from the func down here\r\n    let userData = await updateUserData();\r\n    setUser(userData);\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <header className=\"container-fluid shadow-sm\">\r\n        {/*  */}\r\n       { user && <Route path=\"/\" component={NavBar} /> }\r\n      </header>\r\n      {/* will not show main tag until it get data for user */}\r\n      { user &&\r\n      <main className=\"container\" style={{ minHeight: \"81vh\" }}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/about\" component={About} />\r\n          <Route exact path=\"/signup\" component={SignUpClient} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          {/* <Route exact path=\"/userInfo\" component={UserInfo}/> */}\r\n          <ProtectedRoute path=\"/userInfo\" comp={UserInfo} />\r\n          <ProtectedRoute path=\"/favorites\" comp={FavoriteCards} />\r\n          <ProtectedRoute path=\"/myBizCards\" comp={MyCards} bizRoute={true} />\r\n          <ProtectedRoute path=\"/addCard\" comp={AddCard} bizRoute={true} />\r\n          <ProtectedRoute path=\"/editCard/:id\" comp={EditCard} bizRoute={true} />\r\n          <Route path=\"/\" component={Page404} />\r\n        </Switch>\r\n      </main>\r\n}\r\n      <footer>\r\n        <Footer />\r\n      </footer>\r\n      <ToastContainer position=\"bottom-left\" />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}