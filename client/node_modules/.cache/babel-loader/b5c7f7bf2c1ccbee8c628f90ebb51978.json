{"ast":null,"code":"var _jsxFileName = \"/Users/hamudi/Documents/Learning/Mini Projects/BizCards/macard/client/src/comps/login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { toast } from \"react-toastify\";\nimport { API_URL, doApiMethod } from '../services/apiSer';\nimport { useHistory } from \"react-router-dom\";\nimport PageHeader from './common/pageHeader';\nimport { updateUserData } from '../services/userSer';\nimport Hero, { heroImg } from './common/hero';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  let {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  let history = useHistory();\n\n  const onSubForm = async formData => {\n    console.log(formData); //TODO: send formData to nodejs project /users/login in post\n\n    try {\n      let url = API_URL + \"/users/login\";\n      let data = await doApiMethod(url, \"POST\", formData);\n      console.log(data); // token recived , then saving it to local storage\n\n      localStorage.setItem(\"tok\", data.token); // update the user details so we can pull them anywhere\n      // from the user service\n\n      await updateUserData();\n      toast.success(\"You logged in !\");\n      history.push(\"/userInfo\");\n    } catch (err) {\n      console.log(err);\n      toast.error(\"User or password worng!\");\n    }\n  }; // register -> ref= useRef()\n\n\n  let emailRef = register(\"email\", {\n    required: true,\n    pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\n  });\n  let passwordRef = register(\"password\", {\n    required: true,\n    minLength: 3\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {\n      imgPath: heroImg,\n      heroTitle: 'Welcome Back'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubForm),\n      className: \"col-lg-6 mx-auto shadow p-3 rounded my-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...emailRef,\n          type: \"text\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-danger\",\n          children: \"Enter valid email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...passwordRef,\n          type: \"text\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-danger\",\n          children: \"Enter min 3 charts password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-purple mt-3\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Login, \"ZnZ8zV1ufEqf/S0zIaIDgU/PcV8=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/hamudi/Documents/Learning/Mini Projects/BizCards/macard/client/src/comps/login.js"],"names":["React","useForm","toast","API_URL","doApiMethod","useHistory","PageHeader","updateUserData","Hero","heroImg","Login","props","register","handleSubmit","formState","errors","history","onSubForm","formData","console","log","url","data","localStorage","setItem","token","success","push","err","error","emailRef","required","pattern","passwordRef","minLength","email","password"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport { API_URL, doApiMethod } from '../services/apiSer';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport PageHeader from './common/pageHeader';\r\nimport { updateUserData } from '../services/userSer';\r\nimport Hero, { heroImg } from './common/hero';\r\n\r\n\r\nfunction Login(props) {\r\n  let { register, handleSubmit, formState: { errors } } = useForm();\r\n  let history = useHistory();\r\n\r\n  const onSubForm = async (formData) => {\r\n    console.log(formData);\r\n    //TODO: send formData to nodejs project /users/login in post\r\n    try {\r\n\r\n      let url = API_URL + \"/users/login\";\r\n      let data = await doApiMethod(url, \"POST\", formData);\r\n      console.log(data);\r\n      // token recived , then saving it to local storage\r\n      localStorage.setItem(\"tok\", data.token);\r\n      // update the user details so we can pull them anywhere\r\n      // from the user service\r\n      await updateUserData()\r\n      toast.success(\"You logged in !\");\r\n      history.push(\"/userInfo\");\r\n    }\r\n    catch (err) {\r\n      console.log(err);\r\n      toast.error(\"User or password worng!\");\r\n    }\r\n\r\n  }\r\n\r\n  // register -> ref= useRef()\r\n  let emailRef = register(\"email\", {\r\n    required: true,\r\n    pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\r\n  })\r\n\r\n  let passwordRef = register(\"password\", { required: true, minLength: 3 });\r\n\r\n  return (\r\n    <>\r\n      <Hero imgPath={heroImg} heroTitle={'Welcome Back'} />\r\n        <PageHeader title=\"Log in\" />\r\n      <form onSubmit={handleSubmit(onSubForm)} className=\"col-lg-6 mx-auto shadow p-3 rounded my-5\">\r\n        <div>\r\n          <label>Email:</label>\r\n          <input {...emailRef} type=\"text\" className=\"form-control\" />\r\n          {errors.email && <span className=\"text-danger\">Enter valid email</span>}\r\n        </div>\r\n        <div>\r\n          <label>Password:</label>\r\n          <input {...passwordRef} type=\"text\" className=\"form-control\" />\r\n          {errors.password && <span className=\"text-danger\">Enter min 3 charts password</span>}\r\n        </div>\r\n\r\n        <button className=\"btn btn-purple mt-3\">Log in</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}