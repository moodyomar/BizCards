{"ast":null,"code":"var _jsxFileName = \"/Users/hamudi/Documents/Learning/Mini Projects/BizCards/macard/client/src/comps/common/protectedRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, useHistory } from \"react-router-dom\";\nimport { toast } from 'react-toastify';\nimport { checkIfUser } from '../../services/authSer';\nimport { getUserData } from '../../services/userSer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProtectedRoute(props) {\n  _s();\n\n  let history = useHistory();\n\n  const checkTokenUser = async () => {\n    let data = await checkIfUser();\n    console.log(data); // check if we recived the props biz\n    // which mean its not enough to be registed/user\n    // it need to be a busniess as well.\n\n    if (props.bizRoute) {\n      //check the user if its business user\n      // firstly must pull the data from user service\n      let user = getUserData();\n\n      if (!user.biz) {\n        toast.warning(\"You must be business\");\n        history.push(\"/\");\n      }\n    } // if all good , status w'll be recived\n\n\n    if (!data.status) {\n      // toast.error(\"zzzz\"); // this msg is shows when login out aswell\n      // delete token if invalid\n      localStorage.removeItem(\"tok\");\n      history.push(\"/login\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Route, {\n    exact: true,\n    path: props.path,\n    render: () => {\n      // check if user loggen in , other wise send to login pg\n      checkTokenUser();\n      return /*#__PURE__*/_jsxDEV(props.comp, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProtectedRoute, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/hamudi/Documents/Learning/Mini Projects/BizCards/macard/client/src/comps/common/protectedRoute.js"],"names":["React","Route","useHistory","toast","checkIfUser","getUserData","ProtectedRoute","props","history","checkTokenUser","data","console","log","bizRoute","user","biz","warning","push","status","localStorage","removeItem","path"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,kBAAlC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC7B,MAAIC,OAAO,GAAGN,UAAU,EAAxB;;AAEA,QAAMO,cAAc,GAAG,YAAY;AACjC,QAAIC,IAAI,GAAG,MAAMN,WAAW,EAA5B;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAFiC,CAIrC;AACI;AACA;;AACA,QAAGH,KAAK,CAACM,QAAT,EAAkB;AAChB;AACA;AACA,UAAIC,IAAI,GAAGT,WAAW,EAAtB;;AACA,UAAG,CAACS,IAAI,CAACC,GAAT,EAAa;AACXZ,QAAAA,KAAK,CAACa,OAAN,CAAc,sBAAd;AACAR,QAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AACD;AACF,KAfgC,CAiBjC;;;AACA,QAAI,CAACP,IAAI,CAACQ,MAAV,EAAkB;AAChB;AACA;AACAC,MAAAA,YAAY,CAACC,UAAb,CAAwB,KAAxB;AACAZ,MAAAA,OAAO,CAACS,IAAR,CAAa,QAAb;AACD;AACF,GAxBD;;AA0BA,sBACE,QAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAEV,KAAK,CAACc,IAAzB;AACE,IAAA,MAAM,EAAE,MAAM;AACZ;AACAZ,MAAAA,cAAc;AACd,0BAAQ,QAAC,KAAD,CAAO,IAAP,OAAgBF;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAR;AACD;AALH;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GArCQD,c;UACOJ,U;;;KADPI,c;AAuCT,eAAeA,cAAf","sourcesContent":["import React from 'react';\r\nimport { Route, useHistory } from \"react-router-dom\";\r\nimport { toast } from 'react-toastify';\r\nimport { checkIfUser } from '../../services/authSer';\r\nimport { getUserData } from '../../services/userSer';\r\n\r\nfunction ProtectedRoute(props) {\r\n  let history = useHistory();\r\n\r\n  const checkTokenUser = async () => {\r\n    let data = await checkIfUser()\r\n    console.log(data);\r\n\r\n// check if we recived the props biz\r\n    // which mean its not enough to be registed/user\r\n    // it need to be a busniess as well.\r\n    if(props.bizRoute){\r\n      //check the user if its business user\r\n      // firstly must pull the data from user service\r\n      let user = getUserData();\r\n      if(!user.biz){\r\n        toast.warning(\"You must be business\");\r\n        history.push(\"/\");\r\n      }\r\n    }\r\n\r\n    // if all good , status w'll be recived\r\n    if (!data.status) {\r\n      // toast.error(\"zzzz\"); // this msg is shows when login out aswell\r\n      // delete token if invalid\r\n      localStorage.removeItem(\"tok\");\r\n      history.push(\"/login\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Route exact path={props.path}\r\n      render={() => {\r\n        // check if user loggen in , other wise send to login pg\r\n        checkTokenUser();\r\n        return (<props.comp {...props} />);\r\n      }} />\r\n  )\r\n}\r\n\r\nexport default ProtectedRoute;"]},"metadata":{},"sourceType":"module"}